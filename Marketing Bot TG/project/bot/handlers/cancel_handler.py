"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /cancel
"""
import logging
from aiogram import types
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext
from bot.states.states import BusinessPlanStates, ValuePropositionStates, KnowledgeBaseStates

logger = logging.getLogger(__name__)

async def cancel_command(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel - –æ—Ç–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    current_state = await state.get_state()

    # –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–µ—Ç, –∑–Ω–∞—á–∏—Ç –Ω–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å
    if current_state is None:
        await message.answer("ü§î –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è –æ—Ç–º–µ–Ω—ã.")
        return

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è
    cancel_message = "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."

    if current_state in [s.state for s in BusinessPlanStates.__states__]:
        cancel_message = "‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ."
    elif current_state in [s.state for s in ValuePropositionStates.__states__]:
        cancel_message = "‚ùå –°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ."
    elif current_state in [s.state for s in KnowledgeBaseStates.__states__]:
        cancel_message = "‚ùå –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π –æ—Ç–º–µ–Ω–µ–Ω–∞."

    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ
    await message.answer(cancel_message)

    logger.info(f"User {message.from_user.id} canceled operation in state {current_state}")

def register_handlers(dp):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /cancel
    """
    dp.message.register(cancel_command, Command("cancel"))
